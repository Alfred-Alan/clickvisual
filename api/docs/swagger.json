{
    "swagger": "2.0",
    "info": {
        "description": "Defines interface prefixes in terms of module overrides：\n- base : the global basic readable information module\n- storage : the log module\n- alert : the alert module\n- pandas : the data analysis module\n- cmdb : the configuration module\n- sysop : the system management module",
        "title": "ClickVisual API",
        "contact": {},
        "version": "0.4.0"
    },
    "paths": {
        "/api/v2/alert/metrics-samples": {
            "post": {
                "description": "Store advanced metric data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Create metrics samples table",
                "parameters": [
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ReqCreateMetricsSamples"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/alert/settings": {
            "get": {
                "description": "Instance alarm configuration list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Instance alarm configuration list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RespAlertSettingListItem"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/alert/settings/{instance-id}": {
            "get": {
                "description": "Advanced configuration information in the instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Advanced configuration information in the instance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.RespAlertSettingInfo"
                        }
                    }
                }
            },
            "patch": {
                "description": "Alert Basic Configuration Modification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alert"
                ],
                "summary": "Alert Basic Configuration Modification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "clusterId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "configmap",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "file",
                        "name": "filePath",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "k8s",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "prometheusTarget",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "rule_store_type 1 文件 2 集群",
                        "name": "ruleStoreType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/base/instances": {
            "get": {
                "description": "gets all instances, databases, and table nested data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Gets all instance database and table data filtered by permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/view.RespInstanceSimple"
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/base/shorturls": {
            "post": {
                "description": "Create short links",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Create short links",
                "parameters": [
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ReqShortURLCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/base/su/{s-code}": {
            "get": {
                "description": "Get short links",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Get short links",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "short code",
                        "name": "s-code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Moved Permanently",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/base/users": {
            "get": {
                "description": "Get user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Get user list",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.RespUserSimpleList"
                        }
                    }
                }
            },
            "post": {
                "description": "username 登陆账号\nnickname 显示用户名",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ReqUserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/view.RespUserCreate"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/base/users/{user-id}": {
            "delete": {
                "description": "User delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "User delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/base/users/{user-id}/password-reset": {
            "patch": {
                "description": "Reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/view.RespUserCreate"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/instances/{instance-id}/databases/{database}/tables/{table}/create-sql": {
            "get": {
                "description": "table create sql",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "table create sql",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "database name",
                        "name": "database",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "table name",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/instances/{instance-id}/table-dependencies": {
            "get": {
                "description": "Result of table dependency resolution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Result of table dependency resolution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "instance id",
                        "name": "instance-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "databaseName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.ResPage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/view.RespTableDependencies"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/nodes-results/{result-id}": {
            "patch": {
                "description": "only support excelProcess update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Updates the action on the execution result",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "result id",
                        "name": "result-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "excelProcess",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/nodes/{node-id}/crontab": {
            "post": {
                "description": "isRetry: 0 no 1 yes\nretryInterval: the unit is in seconds, 100 means 100s",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Creating a scheduled node scheduling task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "node id",
                        "name": "node-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ReqCreateCrontab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            },
            "patch": {
                "description": "isRetry: 0 no 1 yes\nretryInterval: the unit is in seconds, 100 means 100s",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Updating a scheduled node scheduling task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "node id",
                        "name": "node-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ReqUpdateCrontab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/nodes/{node-id}/lock-acquire": {
            "post": {
                "description": "Force the file edit lock to be acquired",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Force the file edit lock to be acquired",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "node id",
                        "name": "node-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/nodes/{node-id}/results": {
            "get": {
                "description": "Obtain the node execution result record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Obtain the node execution result record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "node id",
                        "name": "node-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "isExcludeCrontabResult",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.RespNodeResultList"
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/utils/structural-transfer": {
            "post": {
                "description": "source: mysql\ntarget: clickhouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Data field mapping transformation",
                "parameters": [
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/view.ReqStructuralTransfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/workers": {
            "get": {
                "description": "The scheduled task list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "The scheduled task list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current 总记录数",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "iid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PageSize 每页记录数",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort 顺序",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ClickHouse 10; MySQL 11; OfflineSync 20",
                        "name": "tertiary",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Total 总页数",
                        "name": "total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.ResPage"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/view.RespWorkerList"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/pandas/workers/dashboard": {
            "get": {
                "description": "Kanban on the execution status of a scheduled task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pandas"
                ],
                "summary": "Kanban on the execution status of a scheduled task",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "iid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "isInCharge",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.RespWorkerDashboard"
                        }
                    }
                }
            }
        },
        "/api/v2/storage": {
            "post": {
                "description": "Creating a log library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Creating a log library",
                "parameters": [
                    {
                        "type": "string",
                        "name": "brokers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "consumers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "databaseId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "days",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "kafkaSkipBrokenMessages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "rawLogField",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Raw JSON data",
                        "name": "source",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "timeField",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "topics",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "1 string 2 float",
                        "name": "typ",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/collects": {
            "get": {
                "description": "List Collect",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "List Collect",
                "parameters": [
                    {
                        "type": "string",
                        "name": "alias",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.RespListCollect"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create Collect",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Create Collect",
                "parameters": [
                    {
                        "description": "params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ReqCreateCollect"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.ReqCreateCollect"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/storage/collects/{collect-id}": {
            "delete": {
                "description": "Delete Collect",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Delete Collect",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "collect id",
                        "name": "collect-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/mapping-json": {
            "post": {
                "description": "Kafka JSON field mapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Kafka JSON field mapping",
                "parameters": [
                    {
                        "type": "string",
                        "name": "data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.MappingStruct"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/traces": {
            "get": {
                "description": "trace storage list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "trace storage list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/core.Res"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/view.RespTableSimple"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/storage/{storage-id}": {
            "patch": {
                "description": "iStorage update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "iStorage update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table id",
                        "name": "storage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "kafkaBrokers",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min 1 max 8",
                        "name": "kafkaConsumerNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "kafkaSkipBrokenMessages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "kafkaTopic",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "mergeTreeTTL",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "v3TableType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/{storage-id}/analysis-fields": {
            "get": {
                "description": "iStorage analysis field list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "iStorage analysis field list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table id",
                        "name": "storage-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/view.RespStorageAnalysisFields"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/{storage-id}/trace": {
            "patch": {
                "description": "iStorage related trace info update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "iStorage related trace info update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table id",
                        "name": "storage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "traceTableId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v2/storage/{storage-id}/trace-graph": {
            "get": {
                "description": "Get trace graph",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Get trace graph",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table id",
                        "name": "storage-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "startTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        },
        "/api/v3/storage": {
            "post": {
                "description": "Creating a no format restrictions log library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "storage"
                ],
                "summary": "Creating a no format restrictions log library",
                "parameters": [
                    {
                        "type": "string",
                        "name": "brokers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "consumers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "databaseId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "days",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1 yes",
                        "name": "isKafkaTimestamp",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "kafkaSkipBrokenMessages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "timeField",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "1 string 2 float",
                        "name": "timeFieldType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "topics",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "0 default 1 jaegerJson",
                        "name": "v3TableType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Res"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.Pagination": {
            "type": "object",
            "properties": {
                "current": {
                    "description": "Current means current page number",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "PageSize means max item count of a page",
                    "type": "integer"
                },
                "sort": {
                    "description": "Sort means sort expression",
                    "type": "string"
                },
                "total": {
                    "description": "Total means total page count",
                    "type": "integer"
                }
            }
        },
        "core.Res": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code means response business code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data means response data payload"
                },
                "msg": {
                    "description": "Msg means response extra message",
                    "type": "string"
                }
            }
        },
        "core.ResPage": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code means response business code",
                    "type": "integer"
                },
                "data": {
                    "description": "Data means response data payload"
                },
                "msg": {
                    "description": "Msg means response extra message",
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/core.Pagination"
                }
            }
        },
        "db.ReqCreateCollect": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "statement": {
                    "type": "string"
                }
            }
        },
        "db.ReqCreateMetricsSamples": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "iid": {
                    "type": "integer"
                }
            }
        },
        "db.RespAlertSettingInfo": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "integer"
                },
                "configmap": {
                    "type": "string"
                },
                "filePath": {
                    "description": "file",
                    "type": "string"
                },
                "instanceId": {
                    "type": "integer"
                },
                "namespace": {
                    "description": "k8s",
                    "type": "string"
                },
                "prometheusTarget": {
                    "type": "string"
                },
                "ruleStoreType": {
                    "description": "rule_store_type 1 文件 2 集群",
                    "type": "integer"
                }
            }
        },
        "db.RespAlertSettingListItem": {
            "type": "object",
            "properties": {
                "checkAlertManagerResult": {
                    "type": "string"
                },
                "checkMetricsSamplesResult": {
                    "type": "string"
                },
                "checkPrometheusResult": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "integer"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAlertManagerOK": {
                    "description": "0 no 1 yes",
                    "type": "integer"
                },
                "isMetricsSamplesOk": {
                    "description": "0 no 1 yes",
                    "type": "integer"
                },
                "isPrometheusOK": {
                    "description": "check",
                    "type": "integer"
                },
                "prometheusTarget": {
                    "type": "string"
                },
                "ruleStoreType": {
                    "description": "rule_store_type 1 文件 2 集群",
                    "type": "integer"
                }
            }
        },
        "db.RespListCollect": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RespListCollectItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "db.RespListCollectItem": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "statement": {
                    "type": "string"
                }
            }
        },
        "view.Column": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "view.MappingStruct": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.MappingStructItem"
                    }
                }
            }
        },
        "view.MappingStructItem": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "view.ReqCreateCrontab": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.ReqCrontabArg"
                    }
                },
                "cron": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "dutyUid": {
                    "type": "integer"
                },
                "isRetry": {
                    "type": "integer"
                },
                "retryInterval": {
                    "type": "integer"
                },
                "retryTimes": {
                    "type": "integer"
                },
                "typ": {
                    "type": "integer"
                }
            }
        },
        "view.ReqCrontabArg": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "val": {
                    "type": "string"
                }
            }
        },
        "view.ReqShortURLCreate": {
            "type": "object",
            "properties": {
                "originUrl": {
                    "type": "string"
                }
            }
        },
        "view.ReqStructuralTransfer": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.Column"
                    }
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "view.ReqUpdateCrontab": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.ReqCrontabArg"
                    }
                },
                "cron": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "dutyUid": {
                    "type": "integer"
                },
                "isRetry": {
                    "type": "integer"
                },
                "retryInterval": {
                    "type": "integer"
                },
                "retryTimes": {
                    "type": "integer"
                },
                "typ": {
                    "type": "integer"
                }
            }
        },
        "view.ReqUserCreate": {
            "type": "object",
            "properties": {
                "nickname": {
                    "description": "显示用户名",
                    "type": "string"
                },
                "username": {
                    "description": "登陆账号",
                    "type": "string"
                }
            }
        },
        "view.RespDatabaseSimple": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "databaseName": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "iid": {
                    "type": "integer"
                },
                "isCreateByCV": {
                    "type": "integer"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespTableSimple"
                    }
                }
            }
        },
        "view.RespInstanceSimple": {
            "type": "object",
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespDatabaseSimple"
                    }
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "view.RespNodeResult": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "ctime": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "excelProcess": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "result": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "view.RespNodeResultList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespNodeResult"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "view.RespStorageAnalysisFields": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.StorageAnalysisField"
                    }
                }
            }
        },
        "view.RespTableDependencies": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespTableDeps"
                    }
                },
                "utime": {
                    "type": "integer"
                }
            }
        },
        "view.RespTableDeps": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "deps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engine": {
                    "type": "string"
                },
                "replicaNum": {
                    "type": "integer"
                },
                "shardNum": {
                    "type": "integer"
                },
                "table": {
                    "type": "string"
                },
                "totalBytes": {
                    "type": "integer"
                },
                "totalRows": {
                    "type": "integer"
                }
            }
        },
        "view.RespTableSimple": {
            "type": "object",
            "properties": {
                "createType": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "did": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "relTraceTableId": {
                    "type": "integer"
                },
                "tableName": {
                    "type": "string"
                },
                "v3TableType": {
                    "type": "integer"
                }
            }
        },
        "view.RespUserCreate": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "view.RespUserSimpleInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "view.RespUserSimpleList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespUserSimpleInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "view.RespWorkerDashboard": {
            "type": "object",
            "properties": {
                "flows": {
                    "description": "Execution trend chart",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.WorkerStatsRow"
                    }
                },
                "nodeFailed": {
                    "description": "node status",
                    "type": "integer"
                },
                "nodeSuccess": {
                    "description": "node status",
                    "type": "integer"
                },
                "nodeUnknown": {
                    "description": "node status",
                    "type": "integer"
                },
                "workerFailed": {
                    "description": "Execution status of each periodic schedule",
                    "type": "integer"
                },
                "workerSuccess": {
                    "description": "Execution status of each periodic schedule",
                    "type": "integer"
                },
                "workerUnknown": {
                    "description": "Execution status of each periodic schedule",
                    "type": "integer"
                }
            }
        },
        "view.RespWorkerList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/view.RespWorkerRow"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "view.RespWorkerRow": {
            "type": "object",
            "properties": {
                "chargePerson": {
                    "$ref": "#/definitions/view.RespUserSimpleInfo"
                },
                "cost": {
                    "type": "integer"
                },
                "crontab": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "iid": {
                    "type": "integer"
                },
                "nodeId": {
                    "type": "integer"
                },
                "nodeName": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "description": "unknown 0; success 1; failed 2",
                    "type": "integer"
                },
                "tertiary": {
                    "type": "integer"
                }
            }
        },
        "view.StorageAnalysisField": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "ctime": {
                    "type": "integer"
                },
                "field": {
                    "type": "string"
                },
                "hashTyp": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "rootName": {
                    "type": "string"
                },
                "tid": {
                    "type": "integer"
                },
                "typ": {
                    "type": "integer"
                },
                "utime": {
                    "type": "integer"
                }
            }
        },
        "view.WorkerStatsRow": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "success": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "unknown": {
                    "type": "integer"
                }
            }
        }
    }
}