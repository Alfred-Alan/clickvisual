definitions:
  core.Pagination:
    properties:
      current:
        description: Current means current page number
        type: integer
      pageSize:
        description: PageSize means max item count of a page
        type: integer
      sort:
        description: Sort means sort expression
        type: string
      total:
        description: Total means total page count
        type: integer
    type: object
  core.Res:
    properties:
      code:
        description: Code means response business code
        type: integer
      data:
        description: Data means response data payload
      msg:
        description: Msg means response extra message
        type: string
    type: object
  core.ResPage:
    properties:
      code:
        description: Code means response business code
        type: integer
      data:
        description: Data means response data payload
      msg:
        description: Msg means response extra message
        type: string
      pagination:
        $ref: '#/definitions/core.Pagination'
    type: object
  db.ReqCreateCollect:
    properties:
      alias:
        type: string
      statement:
        type: string
    type: object
  db.RespAlertSettingInfo:
    properties:
      clusterId:
        type: integer
      configmap:
        type: string
      filePath:
        description: file
        type: string
      instanceId:
        type: integer
      namespace:
        description: k8s
        type: string
      prometheusTarget:
        type: string
      ruleStoreType:
        description: rule_store_type 1 文件 2 集群
        type: integer
    type: object
  db.RespAlertSettingListItem:
    properties:
      checkAlertManagerResult:
        type: string
      checkPrometheusResult:
        type: string
      instanceId:
        type: integer
      instanceName:
        type: string
      isAlertManagerOK:
        description: 0 no 1 yes
        type: integer
      isPrometheusOK:
        description: check
        type: integer
      prometheusTarget:
        type: string
      ruleStoreType:
        description: rule_store_type 1 文件 2 集群
        type: integer
    type: object
  db.RespListCollect:
    properties:
      list:
        items:
          $ref: '#/definitions/db.RespListCollectItem'
        type: array
      total:
        type: integer
    type: object
  db.RespListCollectItem:
    properties:
      alias:
        type: string
      id:
        type: integer
      statement:
        type: string
    type: object
  view.Column:
    properties:
      comment:
        type: string
      field:
        type: string
      type:
        type: string
    type: object
  view.MappingStruct:
    properties:
      data:
        items:
          $ref: '#/definitions/view.MappingStructItem'
        type: array
    type: object
  view.MappingStructItem:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  view.ReqCreateCrontab:
    properties:
      args:
        items:
          $ref: '#/definitions/view.ReqCrontabArg'
        type: array
      cron:
        type: string
      desc:
        type: string
      dutyUid:
        type: integer
      isRetry:
        type: integer
      retryInterval:
        type: integer
      retryTimes:
        type: integer
      typ:
        type: integer
    type: object
  view.ReqCrontabArg:
    properties:
      key:
        type: string
      val:
        type: string
    type: object
  view.ReqShortURLCreate:
    properties:
      originUrl:
        type: string
    type: object
  view.ReqStructuralTransfer:
    properties:
      columns:
        items:
          $ref: '#/definitions/view.Column'
        type: array
      source:
        type: string
      target:
        type: string
    type: object
  view.ReqUpdateCrontab:
    properties:
      args:
        items:
          $ref: '#/definitions/view.ReqCrontabArg'
        type: array
      cron:
        type: string
      desc:
        type: string
      dutyUid:
        type: integer
      isRetry:
        type: integer
      retryInterval:
        type: integer
      retryTimes:
        type: integer
      typ:
        type: integer
    type: object
  view.ReqUserCreate:
    properties:
      nickname:
        description: 显示用户名
        type: string
      username:
        description: 登陆账号
        type: string
    type: object
  view.RespDatabaseSimple:
    properties:
      cluster:
        type: string
      databaseName:
        type: string
      desc:
        type: string
      id:
        type: integer
      iid:
        type: integer
      isCreateByCV:
        type: integer
      tables:
        items:
          $ref: '#/definitions/view.RespTableSimple'
        type: array
    type: object
  view.RespInstanceSimple:
    properties:
      databases:
        items:
          $ref: '#/definitions/view.RespDatabaseSimple'
        type: array
      desc:
        type: string
      id:
        type: integer
      instanceName:
        type: string
    type: object
  view.RespNodeResult:
    properties:
      avatar:
        type: string
      content:
        type: string
      cost:
        type: integer
      ctime:
        type: integer
      email:
        type: string
      excelProcess:
        type: string
      id:
        type: integer
      nickname:
        type: string
      nodeId:
        type: integer
      result:
        type: string
      status:
        type: integer
      uid:
        type: integer
      username:
        type: string
    type: object
  view.RespNodeResultList:
    properties:
      list:
        items:
          $ref: '#/definitions/view.RespNodeResult'
        type: array
      total:
        type: integer
    type: object
  view.RespStorageAnalysisFields:
    properties:
      keys:
        items:
          $ref: '#/definitions/view.StorageAnalysisField'
        type: array
    type: object
  view.RespTableDependencies:
    properties:
      data:
        items:
          $ref: '#/definitions/view.RespTableDeps'
        type: array
      utime:
        type: integer
    type: object
  view.RespTableDeps:
    properties:
      database:
        type: string
      deps:
        items:
          type: string
        type: array
      engine:
        type: string
      replicaNum:
        type: integer
      shardNum:
        type: integer
      table:
        type: string
      totalBytes:
        type: integer
      totalRows:
        type: integer
    type: object
  view.RespTableSimple:
    properties:
      createType:
        type: integer
      desc:
        type: string
      did:
        type: integer
      id:
        type: integer
      relTraceTableId:
        type: integer
      tableName:
        type: string
      v3TableType:
        type: integer
    type: object
  view.RespUserCreate:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  view.RespUserSimpleInfo:
    properties:
      avatar:
        type: string
      email:
        type: string
      nickname:
        type: string
      uid:
        type: integer
      username:
        type: string
    type: object
  view.RespUserSimpleList:
    properties:
      list:
        items:
          $ref: '#/definitions/view.RespUserSimpleInfo'
        type: array
      total:
        type: integer
    type: object
  view.RespWorkerDashboard:
    properties:
      flows:
        description: Execution trend chart
        items:
          $ref: '#/definitions/view.WorkerStatsRow'
        type: array
      nodeFailed:
        description: node status
        type: integer
      nodeSuccess:
        description: node status
        type: integer
      nodeUnknown:
        description: node status
        type: integer
      workerFailed:
        description: Execution status of each periodic schedule
        type: integer
      workerSuccess:
        description: Execution status of each periodic schedule
        type: integer
      workerUnknown:
        description: Execution status of each periodic schedule
        type: integer
    type: object
  view.RespWorkerList:
    properties:
      list:
        items:
          $ref: '#/definitions/view.RespWorkerRow'
        type: array
      total:
        type: integer
    type: object
  view.RespWorkerRow:
    properties:
      chargePerson:
        $ref: '#/definitions/view.RespUserSimpleInfo'
      cost:
        type: integer
      crontab:
        type: string
      endTime:
        type: integer
      id:
        type: integer
      iid:
        type: integer
      nodeId:
        type: integer
      nodeName:
        type: string
      startTime:
        type: integer
      status:
        description: unknown 0; success 1; failed 2
        type: integer
      tertiary:
        type: integer
    type: object
  view.StorageAnalysisField:
    properties:
      alias:
        type: string
      ctime:
        type: integer
      field:
        type: string
      hashTyp:
        type: integer
      id:
        type: integer
      rootName:
        type: string
      tid:
        type: integer
      typ:
        type: integer
      utime:
        type: integer
    type: object
  view.WorkerStatsRow:
    properties:
      failed:
        type: integer
      success:
        type: integer
      timestamp:
        type: integer
      unknown:
        type: integer
    type: object
info:
  contact: {}
  description: |-
    Defines interface prefixes in terms of module overrides：
    - base : the global basic readable information module
    - storage : the log module
    - alert : the alert module
    - pandas : the data analysis module
    - cmdb : the configuration module
    - sysop : the system management module
  title: ClickVisual API
  version: 0.4.0
paths:
  /api/v2/alert/settings:
    get:
      consumes:
      - application/json
      description: Instance alarm configuration list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.RespAlertSettingListItem'
            type: array
      summary: Instance alarm configuration list
      tags:
      - alert
  /api/v2/alert/settings/{instance-id}:
    get:
      consumes:
      - application/json
      description: Advanced configuration information in the instance
      parameters:
      - description: instance id
        in: path
        name: instance-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.RespAlertSettingInfo'
      summary: Advanced configuration information in the instance
      tags:
      - alert
    patch:
      consumes:
      - application/json
      description: Alert Basic Configuration Modification
      parameters:
      - description: instance id
        in: path
        name: instance-id
        required: true
        type: integer
      - in: query
        name: clusterId
        type: integer
      - in: query
        name: configmap
        type: string
      - description: file
        in: query
        name: filePath
        type: string
      - description: k8s
        in: query
        name: namespace
        type: string
      - in: query
        name: prometheusTarget
        type: string
      - description: rule_store_type 1 文件 2 集群
        in: query
        name: ruleStoreType
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Alert Basic Configuration Modification
      tags:
      - alert
  /api/v2/base/instances:
    get:
      description: gets all instances, databases, and table nested data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/view.RespInstanceSimple'
            type: array
      summary: Gets all instance database and table data filtered by permissions
      tags:
      - base
  /api/v2/base/shorturls:
    post:
      description: Create short links
      parameters:
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/view.ReqShortURLCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Create short links
      tags:
      - base
  /api/v2/base/su/{s-code}:
    get:
      description: Get short links
      parameters:
      - description: short code
        in: path
        name: s-code
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "301":
          description: Moved Permanently
          schema:
            type: string
      summary: Get short links
      tags:
      - base
  /api/v2/base/users:
    get:
      consumes:
      - application/json
      description: Get user list
      parameters:
      - in: query
        name: current
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RespUserSimpleList'
      summary: Get user list
      tags:
      - base
    post:
      description: |-
        username 登陆账号
        nickname 显示用户名
      parameters:
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/view.ReqUserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/view.RespUserCreate'
              type: object
      summary: Create new user
      tags:
      - base
  /api/v2/base/users/{user-id}:
    delete:
      consumes:
      - application/json
      description: User delete
      parameters:
      - description: user id
        in: path
        name: user-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: User delete
      tags:
      - base
  /api/v2/base/users/{user-id}/password-reset:
    patch:
      consumes:
      - application/json
      description: Reset user password
      parameters:
      - description: user id
        in: path
        name: user-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/view.RespUserCreate'
              type: object
      summary: Reset user password
      tags:
      - base
  /api/v2/base/users/{xx-id}:
    delete:
      consumes:
      - application/json
      description: Delete Collect
      parameters:
      - description: xx id
        in: path
        name: xx-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Delete Collect
      tags:
      - base
  /api/v2/pandas/instances/{instance-id}/databases/{database}/tables/{table}/create-sql:
    get:
      consumes:
      - application/json
      description: table create sql
      parameters:
      - description: instance id
        in: path
        name: instance-id
        required: true
        type: integer
      - description: database name
        in: path
        name: database
        required: true
        type: string
      - description: table name
        in: path
        name: table
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  type: string
              type: object
      summary: table create sql
      tags:
      - pandas
  /api/v2/pandas/instances/{instance-id}/table-dependencies:
    get:
      consumes:
      - application/json
      description: Result of table dependency resolution
      parameters:
      - description: instance id
        in: path
        name: instance-id
        required: true
        type: integer
      - in: query
        name: databaseName
        required: true
        type: string
      - in: query
        name: tableName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.ResPage'
            - properties:
                data:
                  $ref: '#/definitions/view.RespTableDependencies'
              type: object
      summary: Result of table dependency resolution
      tags:
      - pandas
  /api/v2/pandas/nodes-results/{result-id}:
    patch:
      consumes:
      - application/json
      description: only support excelProcess update
      parameters:
      - description: result id
        in: path
        name: result-id
        required: true
        type: integer
      - in: query
        name: excelProcess
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Updates the action on the execution result
      tags:
      - pandas
  /api/v2/pandas/nodes/{node-id}/crontab:
    patch:
      consumes:
      - application/json
      description: |-
        isRetry: 0 no 1 yes
        retryInterval: the unit is in seconds, 100 means 100s
      parameters:
      - description: node id
        in: path
        name: node-id
        required: true
        type: integer
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/view.ReqUpdateCrontab'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Updating a scheduled node scheduling task
      tags:
      - pandas
    post:
      consumes:
      - application/json
      description: |-
        isRetry: 0 no 1 yes
        retryInterval: the unit is in seconds, 100 means 100s
      parameters:
      - description: node id
        in: path
        name: node-id
        required: true
        type: integer
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/view.ReqCreateCrontab'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Creating a scheduled node scheduling task
      tags:
      - pandas
  /api/v2/pandas/nodes/{node-id}/lock-acquire:
    post:
      consumes:
      - application/json
      description: Force the file edit lock to be acquired
      parameters:
      - description: node id
        in: path
        name: node-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Force the file edit lock to be acquired
      tags:
      - pandas
  /api/v2/pandas/nodes/{node-id}/results:
    get:
      consumes:
      - application/json
      description: Obtain the node execution result record
      parameters:
      - description: node id
        in: path
        name: node-id
        required: true
        type: integer
      - in: query
        name: current
        type: integer
      - in: query
        name: isExcludeCrontabResult
        type: integer
      - in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RespNodeResultList'
      summary: Obtain the node execution result record
      tags:
      - pandas
  /api/v2/pandas/utils/structural-transfer:
    post:
      consumes:
      - application/json
      description: |-
        source: mysql
        target: clickhouse
      parameters:
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/view.ReqStructuralTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  type: string
              type: object
      summary: Data field mapping transformation
      tags:
      - pandas
  /api/v2/pandas/workers:
    get:
      consumes:
      - application/json
      description: The scheduled task list
      parameters:
      - description: Current 总记录数
        in: query
        name: current
        type: integer
      - in: query
        name: end
        type: integer
      - in: query
        name: iid
        type: integer
      - in: query
        name: nodeName
        type: string
      - description: PageSize 每页记录数
        in: query
        name: pageSize
        type: integer
      - description: Sort 顺序
        in: query
        name: sort
        type: string
      - in: query
        name: start
        type: integer
      - description: ClickHouse 10; MySQL 11; OfflineSync 20
        in: query
        name: tertiary
        type: integer
      - description: Total 总页数
        in: query
        name: total
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.ResPage'
            - properties:
                data:
                  $ref: '#/definitions/view.RespWorkerList'
              type: object
      summary: The scheduled task list
      tags:
      - pandas
  /api/v2/pandas/workers/dashboard:
    get:
      consumes:
      - application/json
      description: Kanban on the execution status of a scheduled task
      parameters:
      - in: query
        name: end
        type: integer
      - in: query
        name: iid
        type: integer
      - in: query
        name: isInCharge
        type: integer
      - in: query
        name: start
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RespWorkerDashboard'
      summary: Kanban on the execution status of a scheduled task
      tags:
      - pandas
  /api/v2/storage:
    post:
      consumes:
      - application/json
      description: Creating a log library
      parameters:
      - in: query
        name: brokers
        required: true
        type: string
      - in: query
        name: consumers
        required: true
        type: integer
      - in: query
        name: databaseId
        required: true
        type: integer
      - in: query
        name: days
        required: true
        type: integer
      - in: query
        name: desc
        type: string
      - in: query
        name: kafkaSkipBrokenMessages
        type: integer
      - in: query
        name: rawLogField
        required: true
        type: string
      - description: Raw JSON data
        in: query
        name: source
        required: true
        type: string
      - in: query
        name: tableName
        required: true
        type: string
      - in: query
        name: timeField
        required: true
        type: string
      - in: query
        name: topics
        required: true
        type: string
      - description: 1 string 2 float
        in: query
        name: typ
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Creating a log library
      tags:
      - storage
  /api/v2/storage/{storage-id}:
    patch:
      consumes:
      - application/json
      description: iStorage update
      parameters:
      - description: table id
        in: path
        name: storage-id
        required: true
        type: integer
      - in: query
        name: desc
        type: string
      - in: query
        name: kafkaBrokers
        type: string
      - description: min 1 max 8
        in: query
        name: kafkaConsumerNum
        type: integer
      - in: query
        name: kafkaSkipBrokenMessages
        type: integer
      - in: query
        name: kafkaTopic
        type: string
      - in: query
        name: mergeTreeTTL
        type: integer
      - in: query
        name: v3TableType
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: iStorage update
      tags:
      - storage
  /api/v2/storage/{storage-id}/analysis-fields:
    get:
      consumes:
      - application/json
      description: iStorage analysis field list
      parameters:
      - description: table id
        in: path
        name: storage-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.RespStorageAnalysisFields'
      summary: iStorage analysis field list
      tags:
      - storage
  /api/v2/storage/{storage-id}/trace:
    patch:
      consumes:
      - application/json
      description: iStorage related trace info update
      parameters:
      - description: table id
        in: path
        name: storage-id
        required: true
        type: integer
      - in: query
        name: traceTableId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: iStorage related trace info update
      tags:
      - storage
  /api/v2/storage/{storage-id}/trace-graph:
    get:
      consumes:
      - application/json
      description: Get trace graph
      parameters:
      - description: table id
        in: path
        name: storage-id
        required: true
        type: integer
      - in: query
        name: endTime
        type: integer
      - in: query
        name: startTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Get trace graph
      tags:
      - storage
  /api/v2/storage/collects:
    get:
      consumes:
      - application/json
      description: List Collect
      parameters:
      - in: query
        name: alias
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/db.RespListCollect'
              type: object
      summary: List Collect
      tags:
      - storage
    post:
      description: Create Collect
      parameters:
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/db.ReqCreateCollect'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/db.ReqCreateCollect'
              type: object
      summary: Create Collect
      tags:
      - storage
  /api/v2/storage/collects/{collect-id}:
    delete:
      consumes:
      - application/json
      description: Delete Collect
      parameters:
      - description: collect id
        in: path
        name: collect-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Delete Collect
      tags:
      - storage
  /api/v2/storage/mapping-json:
    post:
      consumes:
      - application/json
      description: Kafka JSON field mapping
      parameters:
      - in: query
        name: data
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/view.MappingStruct'
      summary: Kafka JSON field mapping
      tags:
      - storage
  /api/v2/storage/traces:
    get:
      consumes:
      - application/json
      description: trace storage list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/view.RespTableSimple'
                  type: array
              type: object
      summary: trace storage list
      tags:
      - storage
  /api/v2/xx/xx:
    get:
      consumes:
      - application/json
      description: List Collect
      parameters:
      - in: query
        name: alias
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.RespListCollect'
      summary: List Collect
      tags:
      - base
    post:
      description: Create Collect
      parameters:
      - description: params
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/db.ReqCreateCollect'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/db.ReqCreateCollect'
              type: object
      summary: Create Collect
      tags:
      - base
  /api/v2/xx/xx/{xx-id}:
    patch:
      consumes:
      - application/json
      description: Update Collect
      parameters:
      - description: xx id
        in: path
        name: xx-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/core.Res'
            - properties:
                data:
                  $ref: '#/definitions/view.RespUserCreate'
              type: object
      summary: Update Collect
      tags:
      - base
  /api/v3/storage:
    post:
      consumes:
      - application/json
      description: Creating a no format restrictions log library
      parameters:
      - in: query
        name: brokers
        required: true
        type: string
      - in: query
        name: consumers
        required: true
        type: integer
      - in: query
        name: databaseId
        required: true
        type: integer
      - in: query
        name: days
        required: true
        type: integer
      - in: query
        name: desc
        type: string
      - description: 1 yes
        in: query
        name: isKafkaTimestamp
        type: integer
      - in: query
        name: kafkaSkipBrokenMessages
        type: integer
      - in: query
        name: tableName
        required: true
        type: string
      - in: query
        name: timeField
        type: string
      - description: 1 string 2 float
        in: query
        name: timeFieldType
        type: integer
      - in: query
        name: topics
        required: true
        type: string
      - description: 0 default 1 jaegerJson
        in: query
        name: v3TableType
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.Res'
      summary: Creating a no format restrictions log library
      tags:
      - storage
swagger: "2.0"
